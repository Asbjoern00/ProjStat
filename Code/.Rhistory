t3
saveRDS(t3, "t3.rds")
# correctly specified propensity Score and RF mean learner
#options(error=browser)
exps4 <- list(
exp_no_cf = Experiment$new(n_sims = nsim, sim = sim, est = Estimator$new(prp_lrn = corr_spec_prp, mean_lrn = mean_lrn_rf, cross_fit = FALSE)),
exp_cf_2 = Experiment$new(n_sims = nsim, sim = sim, est = Estimator$new(prp_lrn = corr_spec_prp, mean_lrn = mean_lrn_rf, cross_fit = 2)),
exp_cf_3 = Experiment$new(n_sims = nsim, sim = sim, est = Estimator$new(prp_lrn = corr_spec_prp, mean_lrn = mean_lrn_rf, cross_fit = 3))
)
cvg <- numeric(length(exps1))
K <- numeric(length(exps1))
for(exp in seq_along(exps1)){
exps4[[exp]]$run(verbose = TRUE)
cvg[exp] <- exps4[[exp]]$cvrg
K[exp] <- exps4[[exp]]$est$cross_fit
}
p4 <- cowplot::plot_grid(exps4[[1]]$plot(10), exps4[[2]]$plot(10), exps4[[3]]$plot(10))
cowplot::save_plot("p4.png", p4)
p4
t4 <-tibble(cvg = cvg, K = K)
t4
saveRDS(t4, "t4.rds")
# glmnet propensity Score and RF mean learner
exps5 <- list(
exp_no_cf = Experiment$new(n_sims = nsim, sim = sim, est = Estimator$new(prp_lrn = prp_reg, mean_lrn = mean_lrn_rf, cross_fit = FALSE)),
exp_cf_2 = Experiment$new(n_sims = nsim, sim = sim, est = Estimator$new(prp_lrn = prp_reg, mean_lrn = mean_lrn_rf, cross_fit = 2)),
exp_cf_3 = Experiment$new(n_sims = nsim, sim = sim, est = Estimator$new(prp_lrn = prp_reg, mean_lrn = mean_lrn_rf, cross_fit = 3))
)
cvg <- numeric(length(exps1))
K <- numeric(length(exps1))
for(exp in seq_along(exps1)){
exps5[[exp]]$run(verbose = TRUE)
cvg[exp] <- exps5[[exp]]$cvrg
K[exp] <- exps5[[exp]]$est$cross_fit
}
p5 <- cowplot::plot_grid(exps5[[1]]$plot(10), exps5[[2]]$plot(10), exps5[[3]]$plot(10))
p5
cowplot::save_plot("p5.png", p5)
t5 <- tibble(cvg = cvg, K = K)
saveRDS(t5, "t5.rds")
t5
setwd("/home/asr/Desktop/ProjStat/Code")
source("Experiment.R")
source("Estimator.R")
source("Simulator.R")
source("LearnerTypes.R")
options(error = recover)
#SIMULATION SETTINGS
nsim <- 400
n <- 6000
sim <- Simulator$new(n = n, sim_cov = sim_cov, sim_A = sim_A, sim_Y = sim_Y)
miss_spec_prp <- GLM$new(A ~ w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10-1, name = "GLM misspec.")
corr_spec_prp <- GLM$new(A ~ w1+w2+w3, name = "GLM corr. spec.")
prp_reg <- GLMNet$new(A~., name = "GLMNet")
mean_lrn_rf <- RF$new(Y ~ ., name = "RF")
mean_lrn_misspec <- GLM$new(Y ~ A + w1 + w2 + w4 + w5 + w6 -1, name = "GLM misspec.")
# Misspecified Propensity Score and Misspecified Mean Learner
exps1 <- list(
exp_no_cf = Experiment$new(n_sims = nsim, sim = sim, est = Estimator$new(prp_lrn = miss_spec_prp, mean_lrn = mean_lrn_misspec, cross_fit = FALSE)),
exp_cf_2 = Experiment$new(n_sims = nsim, sim = sim, est = Estimator$new(prp_lrn = miss_spec_prp, mean_lrn = mean_lrn_misspec, cross_fit = 2)),
exp_cf_3 = Experiment$new(n_sims = nsim, sim = sim, est = Estimator$new(prp_lrn = miss_spec_prp, mean_lrn = mean_lrn_misspec, cross_fit = 3))
)
cvg <- numeric(length(exps1))
K <- numeric(length(exps1))
for(exp in seq_along(exps1)){
exps1[[exp]]$run(verbose = TRUE)
cvg[exp] <- exps1[[exp]]$cvrg
K[exp] <- exps1[[exp]]$est$cross_fit
}
recover()
sim$out_frame
sim$out_frame
is.null(sim$out_frame)
is.na(sim$out_frame)
sum(is.na(sim$out_frame))
sim
sim$simulate()
sim$out_frame
is.na(sim$out_frame)
sum(is.na(sim$out_frame))
source("~/Desktop/ProjStat/Code/InitialExperiments.R")
valid_sim <- FALSE
while(!valid_sim){
self$sim$simulate()
if(!any(is.na(self$sim$out_frame))){
valid_sim <- TRUE
}
}
# Implements an S6 class called Learner which all implemented learners should derive from
# Define the class
Learner <- R6::R6Class(
"Learner",  # Class name
public = list(  # Public methods and fields
name = NULL,
hyperparams = NULL,
formula = NULL,
fitted = NULL,
Xtrain = NULL,
initialize = function(formula,name=NULL, hyperparams=NULL){
self$name <- name
self$hyperparams <- hyperparams
self$formula <- formula
},
fit = function(df) {
# Method to fit to data
preprocessed <- private$preprocess(df)
self$Xtrain <- preprocessed[["X"]]
self$fitted <- private$fitter(preprocessed[["X"]], preprocessed[["y"]])
},
predict = function(df){
# Method to predict on new data
preprocessed <- private$preprocess(df)
to_predict <- preprocessed[["X"]]
predicted <- private$predictor(to_predict)
return(predicted)
}
),
private = list(
fitter = function(X,y){
#OVERRIDE THIS FUNCTION
return(0)
},
predictor = function(X){
#OVERRIDE THIS FUNCTION
return(0)
},
preprocess = function(df){
X <- model.matrix(self$formula, df)
resp_name <- as.character(self$formula[2]) #get the name of the response vector
y <- df[[resp_name]]
return(list(X = X, y = y))
}
)
)
setwd("/home/asr/Desktop/ProjStat/Code")
source("Experiment.R")
source("Estimator.R")
source("Simulator.R")
source("LearnerTypes.R")
options(error = recover)
#SIMULATION SETTINGS
nsim <- 400
n <- 6000
sim <- Simulator$new(n = n, sim_cov = sim_cov, sim_A = sim_A, sim_Y = sim_Y)
miss_spec_prp <- GLM$new(A ~ w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10-1, name = "GLM misspec.")
corr_spec_prp <- GLM$new(A ~ w1+w2+w3, name = "GLM corr. spec.")
prp_reg <- GLMNet$new(A~., name = "GLMNet")
mean_lrn_rf <- RF$new(Y ~ ., name = "RF")
mean_lrn_misspec <- GLM$new(Y ~ A + w1 + w2 + w4 + w5 + w6 -1, name = "GLM misspec.")
# Misspecified Propensity Score and Misspecified Mean Learner
exps1 <- list(
exp_no_cf = Experiment$new(n_sims = nsim, sim = sim, est = Estimator$new(prp_lrn = miss_spec_prp, mean_lrn = mean_lrn_misspec, cross_fit = FALSE)),
exp_cf_2 = Experiment$new(n_sims = nsim, sim = sim, est = Estimator$new(prp_lrn = miss_spec_prp, mean_lrn = mean_lrn_misspec, cross_fit = 2)),
exp_cf_3 = Experiment$new(n_sims = nsim, sim = sim, est = Estimator$new(prp_lrn = miss_spec_prp, mean_lrn = mean_lrn_misspec, cross_fit = 3))
)
cvg <- numeric(length(exps1))
K <- numeric(length(exps1))
for(exp in seq_along(exps1)){
exps1[[exp]]$run(verbose = TRUE)
cvg[exp] <- exps1[[exp]]$cvrg
K[exp] <- exps1[[exp]]$est$cross_fit
}
p1 <- cowplot::plot_grid(exps1[[1]]$plot(10), exps1[[2]]$plot(10), exps1[[3]]$plot(10))
valid_sim <- FALSE
while(!valid_sim){
self$sim$simulate()
if(!any(is.na(self$sim$out_frame))){
valid_sim <- TRUE
}
}
self$sim
self$sim$out_frame
self$sim$simulate()
self$sim
self$sim$out_frame
!any(is.na(self$sim$out_frame))
setwd("/home/asr/Desktop/ProjStat/Code")
source("Experiment.R")
source("Estimator.R")
source("Simulator.R")
source("LearnerTypes.R")
options(error = recover)
#SIMULATION SETTINGS
nsim <- 400
n <- 6000
sim <- Simulator$new(n = n, sim_cov = sim_cov, sim_A = sim_A, sim_Y = sim_Y)
miss_spec_prp <- GLM$new(A ~ w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10-1, name = "GLM misspec.")
corr_spec_prp <- GLM$new(A ~ w1+w2+w3, name = "GLM corr. spec.")
prp_reg <- GLMNet$new(A~., name = "GLMNet")
mean_lrn_rf <- RF$new(Y ~ ., name = "RF")
mean_lrn_misspec <- GLM$new(Y ~ A + w1 + w2 + w4 + w5 + w6 -1, name = "GLM misspec.")
# Misspecified Propensity Score and Misspecified Mean Learner
exps1 <- list(
exp_no_cf = Experiment$new(n_sims = nsim, sim = sim, est = Estimator$new(prp_lrn = miss_spec_prp, mean_lrn = mean_lrn_misspec, cross_fit = FALSE)),
exp_cf_2 = Experiment$new(n_sims = nsim, sim = sim, est = Estimator$new(prp_lrn = miss_spec_prp, mean_lrn = mean_lrn_misspec, cross_fit = 2)),
exp_cf_3 = Experiment$new(n_sims = nsim, sim = sim, est = Estimator$new(prp_lrn = miss_spec_prp, mean_lrn = mean_lrn_misspec, cross_fit = 3))
)
cvg <- numeric(length(exps1))
K <- numeric(length(exps1))
for(exp in seq_along(exps1)){
exps1[[exp]]$run(verbose = TRUE)
cvg[exp] <- exps1[[exp]]$cvrg
K[exp] <- exps1[[exp]]$est$cross_fit
}
p1 <- cowplot::plot_grid(exps1[[1]]$plot(10), exps1[[2]]$plot(10), exps1[[3]]$plot(10))
p1
cowplot::save_plot("p1.png", p1)
t1 <- tibble(cvg = cvg, K = K)
t1
saveRDS(t1, "t1.rds")
# Correctly specfied propensity Score and wrongly specified mean learner
exps2 <- list(
exp_no_cf = Experiment$new(n_sims = nsim, sim = sim, est = Estimator$new(prp_lrn = corr_spec_prp, mean_lrn = mean_lrn_misspec, cross_fit = FALSE)),
exp_cf_2 = Experiment$new(n_sims = nsim, sim = sim, est = Estimator$new(prp_lrn = corr_spec_prp, mean_lrn = mean_lrn_misspec, cross_fit = 2)),
exp_cf_3 = Experiment$new(n_sims = nsim, sim = sim, est = Estimator$new(prp_lrn = corr_spec_prp, mean_lrn = mean_lrn_misspec, cross_fit = 3))
)
cvg <- numeric(length(exps2))
K <- numeric(length(exps2))
for(exp in seq_along(exps2)){
exps2[[exp]]$run(verbose = TRUE)
cvg[exp] <- exps2[[exp]]$cvrg
K[exp] <- exps2[[exp]]$est$cross_fit
}
p2 <- cowplot::plot_grid(exps2[[1]]$plot(10), exps2[[2]]$plot(10), exps2[[3]]$plot(10))
p2
cowplot::save_plot("p2.png", p2)
t2 <- tibble(cvg = cvg, K = K)
t2
saveRDS(t2, "t2.rds")
# misspecfied propensity Score and RF mean learner
exps3 <- list(
exp_no_cf = Experiment$new(n_sims = nsim, sim = sim, est = Estimator$new(prp_lrn = miss_spec_prp, mean_lrn = mean_lrn_rf, cross_fit = FALSE)),
exp_cf_2 = Experiment$new(n_sims = nsim, sim = sim, est = Estimator$new(prp_lrn = miss_spec_prp, mean_lrn = mean_lrn_rf, cross_fit = 2)),
exp_cf_3 = Experiment$new(n_sims = nsim, sim = sim, est = Estimator$new(prp_lrn = miss_spec_prp, mean_lrn = mean_lrn_rf, cross_fit = 3))
)
cvg <- numeric(length(exps1))
K <- numeric(length(exps1))
for(exp in seq_along(exps1)){
exps3[[exp]]$run(verbose = TRUE)
cvg[exp] <- exps3[[exp]]$cvrg
K[exp] <- exps3[[exp]]$est$cross_fit
}
p5
p4
p3
p2
p1
t5
exps5
gc()
setwd("/home/asr/Desktop/ProjStat/Code")
source("Experiment.R")
source("Estimator.R")
source("Simulator.R")
source("LearnerTypes.R")
options(error = recover)
#SIMULATION SETTINGS
nsim <- 400
n <- 6000
sim <- Simulator$new(n = n, sim_cov = sim_cov, sim_A = sim_A, sim_Y = sim_Y)
miss_spec_prp <- GLM$new(A ~ w3 + w4 + w5 + w6 + w7 + w8 + w9 + w10-1, name = "GLM misspec.")
corr_spec_prp <- GLM$new(A ~ w1+w2+w3, name = "GLM corr. spec.")
prp_reg <- GLMNet$new(A~., name = "GLMNet")
mean_lrn_rf <- RF$new(Y ~ ., name = "RF")
mean_lrn_misspec <- GLM$new(Y ~ A + w1 + w2 + w4 + w5 + w6 -1, name = "GLM misspec.")
# Misspecified Propensity Score and Misspecified Mean Learner
exps1 <- list(
exp_no_cf = Experiment$new(n_sims = nsim, sim = sim, est = Estimator$new(prp_lrn = miss_spec_prp, mean_lrn = mean_lrn_misspec, cross_fit = FALSE)),
exp_cf_2 = Experiment$new(n_sims = nsim, sim = sim, est = Estimator$new(prp_lrn = miss_spec_prp, mean_lrn = mean_lrn_misspec, cross_fit = 2)),
exp_cf_3 = Experiment$new(n_sims = nsim, sim = sim, est = Estimator$new(prp_lrn = miss_spec_prp, mean_lrn = mean_lrn_misspec, cross_fit = 3))
)
cvg <- numeric(length(exps1))
K <- numeric(length(exps1))
for(exp in seq_along(exps1)){
exps1[[exp]]$run(verbose = TRUE)
cvg[exp] <- exps1[[exp]]$cvrg
K[exp] <- exps1[[exp]]$est$cross_fit
}
p1 <- cowplot::plot_grid(exps1[[1]]$plot(10), exps1[[2]]$plot(10), exps1[[3]]$plot(10))
p1
cowplot::save_plot("p1.png", p1)
t1 <- tibble(cvg = cvg, K = K)
t1
saveRDS(t1, "t1.rds")
# Correctly specfied propensity Score and wrongly specified mean learner
exps2 <- list(
exp_no_cf = Experiment$new(n_sims = nsim, sim = sim, est = Estimator$new(prp_lrn = corr_spec_prp, mean_lrn = mean_lrn_misspec, cross_fit = FALSE)),
exp_cf_2 = Experiment$new(n_sims = nsim, sim = sim, est = Estimator$new(prp_lrn = corr_spec_prp, mean_lrn = mean_lrn_misspec, cross_fit = 2)),
exp_cf_3 = Experiment$new(n_sims = nsim, sim = sim, est = Estimator$new(prp_lrn = corr_spec_prp, mean_lrn = mean_lrn_misspec, cross_fit = 3))
)
cvg <- numeric(length(exps2))
K <- numeric(length(exps2))
for(exp in seq_along(exps2)){
exps2[[exp]]$run(verbose = TRUE)
cvg[exp] <- exps2[[exp]]$cvrg
K[exp] <- exps2[[exp]]$est$cross_fit
}
p2 <- cowplot::plot_grid(exps2[[1]]$plot(10), exps2[[2]]$plot(10), exps2[[3]]$plot(10))
p2
cowplot::save_plot("p2.png", p2)
t2 <- tibble(cvg = cvg, K = K)
t2
saveRDS(t2, "t2.rds")
# misspecfied propensity Score and RF mean learner
exps3 <- list(
exp_no_cf = Experiment$new(n_sims = nsim, sim = sim, est = Estimator$new(prp_lrn = miss_spec_prp, mean_lrn = mean_lrn_rf, cross_fit = FALSE)),
exp_cf_2 = Experiment$new(n_sims = nsim, sim = sim, est = Estimator$new(prp_lrn = miss_spec_prp, mean_lrn = mean_lrn_rf, cross_fit = 2)),
exp_cf_3 = Experiment$new(n_sims = nsim, sim = sim, est = Estimator$new(prp_lrn = miss_spec_prp, mean_lrn = mean_lrn_rf, cross_fit = 3))
)
cvg <- numeric(length(exps1))
K <- numeric(length(exps1))
for(exp in seq_along(exps1)){
exps3[[exp]]$run(verbose = TRUE)
cvg[exp] <- exps3[[exp]]$cvrg
K[exp] <- exps3[[exp]]$est$cross_fit
}
p3 <- cowplot::plot_grid(exps3[[1]]$plot(10), exps3[[2]]$plot(10), exps3[[3]]$plot(10))
p3
cowplot::save_plot("p3.png", p3)
t3 <- tibble(cvg = cvg, K = K)
t3
saveRDS(t3, "t3.rds")
# correctly specified propensity Score and RF mean learner
#options(error=browser)
exps4 <- list(
exp_no_cf = Experiment$new(n_sims = nsim, sim = sim, est = Estimator$new(prp_lrn = corr_spec_prp, mean_lrn = mean_lrn_rf, cross_fit = FALSE)),
exp_cf_2 = Experiment$new(n_sims = nsim, sim = sim, est = Estimator$new(prp_lrn = corr_spec_prp, mean_lrn = mean_lrn_rf, cross_fit = 2)),
exp_cf_3 = Experiment$new(n_sims = nsim, sim = sim, est = Estimator$new(prp_lrn = corr_spec_prp, mean_lrn = mean_lrn_rf, cross_fit = 3))
)
cvg <- numeric(length(exps1))
K <- numeric(length(exps1))
for(exp in seq_along(exps1)){
exps4[[exp]]$run(verbose = TRUE)
cvg[exp] <- exps4[[exp]]$cvrg
K[exp] <- exps4[[exp]]$est$cross_fit
}
p4 <- cowplot::plot_grid(exps4[[1]]$plot(10), exps4[[2]]$plot(10), exps4[[3]]$plot(10))
cowplot::save_plot("p4.png", p4)
p4
t4 <-tibble(cvg = cvg, K = K)
t4
saveRDS(t4, "t4.rds")
# glmnet propensity Score and RF mean learner
exps5 <- list(
exp_no_cf = Experiment$new(n_sims = nsim, sim = sim, est = Estimator$new(prp_lrn = prp_reg, mean_lrn = mean_lrn_rf, cross_fit = FALSE)),
exp_cf_2 = Experiment$new(n_sims = nsim, sim = sim, est = Estimator$new(prp_lrn = prp_reg, mean_lrn = mean_lrn_rf, cross_fit = 2)),
exp_cf_3 = Experiment$new(n_sims = nsim, sim = sim, est = Estimator$new(prp_lrn = prp_reg, mean_lrn = mean_lrn_rf, cross_fit = 3))
)
cvg <- numeric(length(exps1))
K <- numeric(length(exps1))
for(exp in seq_along(exps1)){
exps5[[exp]]$run(verbose = TRUE)
cvg[exp] <- exps5[[exp]]$cvrg
K[exp] <- exps5[[exp]]$est$cross_fit
}
p5 <- cowplot::plot_grid(exps5[[1]]$plot(10), exps5[[2]]$plot(10), exps5[[3]]$plot(10))
p5
cowplot::save_plot("p5.png", p5)
t5 <- tibble(cvg = cvg, K = K)
saveRDS(t5, "t5.rds")
t5
exps1
exps1[[1]]
exps1[[1]]$ATE
mean(exps1[[1]]$ATE)
exps1[[1]]-1mean(exps1[[1]]$ATE)
saveRDS(exps1, "exps1.rds")
saveRDS(exps2, "exps2.rds")
saveRDS(exps3, "exps3.rds")
saveRDS(exps4, "exps4.rds")
saveRDS(exps5, "exps5.rds")
test <- readRDS(exps1)
test <- readRDS("exps1.rds")
test
test[[1]]
test[[1]]$cvrg
test2 <- readRDS("exps5.rds")
test2
test2[[1]]$plot()
test2[[2]]$plot()
test2[[3]]$plot()
test2[[3]]$cvrg
test2[[2]]$cvrg
test2[[1]]$cvrg
test2[[3]]$ATE
test2[[3]]$ATE-test2[[3]]$TrueATE
mean((test2[[3]]$ATE-test2[[3]]$TrueATE)^2)
mean((test2[[1]]$ATE-test2[[1]]$TrueATE)^2)
var(test2[[1]]$ATE)
var(test2[[3]]$ATE)
var(test2[[2]]$ATE)
knitr::opts_chunk$set(echo = TRUE)
exps1 <- readRDS("exps1.rds")
exps2 <- readRDS("exps2.rds")
exps3 <- readRDS("exps3.rds")
exps4 <- readRDS("exps4.rds")
exps5 <- readRDS("exps5.rds")
K <- numeric(length(exps1))
for(exp in seq_along(exps1)){
exps1[[exp]]$run(verbose = TRUE)
cvg[exp] <- exps1[[exp]]$cvrg
K[exp] <- exps1[[exp]]$est$cross_fit
}
K <- numeric(length(exps1))
for(exp in seq_along(exps1)){
cvg[exp] <- exps1[[exp]]$cvrg
K[exp] <- exps1[[exp]]$est$cross_fit
}
p1 <- cowplot::plot_grid(exps1[[1]]$plot(10), exps1[[2]]$plot(10), exps1[[3]]$plot(10))
p1
exps1[[exp]
exps1[[exp]]
exps1[[exp]]$ATE
exps1[[exp]$ATE-exps1[[exp]$True_ATE]^2
exps1[[exp]$ATE-exps1[[exp]$TrueATE]^2
exps1[[exp]]$TrueATE^2
K <- numeric(length(exps1))
mse <- numeric(length(exps1))
cvg <- numeric(length(exps1))
variance <- numeric(length(exps1))
bias <- numeric(length(exps1))
for(exp in seq_along(exps1)){
cvg[exp] <- exps1[[exp]]$cvrg
K[exp] <- exps1[[exp]]$est$cross_fit
bias[exp] <-mean(exps1[[exp]$ATE-exps1[[exp]]$TrueATE)
K <- numeric(length(exps1))
mse <- numeric(length(exps1))
cvg <- numeric(length(exps1))
variance <- numeric(length(exps1))
bias <- numeric(length(exps1))
for(exp in seq_along(exps1)){
cvg[exp] <- exps1[[exp]]$cvrg
K[exp] <- exps1[[exp]]$cross_fit
bias[exp] <-mean(exps1[[exp]$ATE-exps1[[exp]]$TrueATE)
exps1[[exp]]
exps1[[exp]]$cvrg
exps1[[exp]]$cross_fit
exps1[[exp]]$est$cross_fit
mean(exps1[[exp]$ATE-exps1[[exp]]$TrueATE)
exps1[[exp]$ATE
exps1[[exp]]$ATE
K <- numeric(length(exps1))
mse <- numeric(length(exps1))
cvg <- numeric(length(exps1))
variance <- numeric(length(exps1))
bias <- numeric(length(exps1))
for(exp in seq_along(exps1)){
cvg[exp] <- exps1[[exp]]$cvrg
K[exp] <- exps1[[exp]]$est$cross_fit
bias[exp] <-mean(exps1[[exp]]$ATE-exps1[[exp]]$TrueATE)
mse[exp] <- mean((exps1[[exp]]$ATE-exps1[[exp]]$TrueATE)^2)
variance[exp] <- var(exps1[[exp]$ATE)
K <- numeric(length(exps1))
mse <- numeric(length(exps1))
cvg <- numeric(length(exps1))
variance <- numeric(length(exps1))
bias <- numeric(length(exps1))
for(exp in seq_along(exps1)){
cvg[exp] <- exps1[[exp]]$cvrg
K[exp] <- exps1[[exp]]$est$cross_fit
bias[exp] <-mean(exps1[[exp]]$ATE-exps1[[exp]]$TrueATE)
mse[exp] <- mean((exps1[[exp]]$ATE-exps1[[exp]]$TrueATE)^2)
variance[exp] <- var(exps1[[exp]]$ATE)
}
p1 <- cowplot::plot_grid(exps1[[1]]$plot(10), exps1[[2]]$plot(10), exps1[[3]]$plot(10))
p1
tibble::tibble(K = K, cvg = cvg, mse = mse, bias = bias, variance = variance)
K <- numeric(length(exps2))
mse <- numeric(length(exps2))
cvg <- numeric(length(exps2))
variance <- numeric(length(exps2))
bias <- numeric(length(exps2))
for(exp in seq_along(exps2)){
cvg[exp] <- exps2[[exp]]$cvrg
K[exp] <- exps2[[exp]]$est$cross_fit
bias[exp] <-mean(exps2[[exp]]$ATE-exps2[[exp]]$TrueATE)
mse[exp] <- mean((exps2[[exp]]$ATE-exps2[[exp]]$TrueATE)^2)
variance[exp] <- var(exps2[[exp]]$ATE)
}
p2 <- cowplot::plot_grid(exps2[[1]]$plot(10), exps2[[2]]$plot(10), exps2[[3]]$plot(10))
p2
tibble::tibble(K = K, cvg = cvg, mse = mse, bias = bias, variance = variance)
K <- numeric(length(exps3))
mse <- numeric(length(exps3))
cvg <- numeric(length(exps3))
variance <- numeric(length(exps3))
bias <- numeric(length(exps3))
for(exp in seq_along(exps3)){
cvg[exp] <- exps3[[exp]]$cvrg
K[exp] <- exps3[[exp]]$est$cross_fit
bias[exp] <-mean(exps3[[exp]]$ATE-exps3[[exp]]$TrueATE)
mse[exp] <- mean((exps3[[exp]]$ATE-exps3[[exp]]$TrueATE)^2)
variance[exp] <- var(exps3[[exp]]$ATE)
}
p3 <- cowplot::plot_grid(exps3[[1]]$plot(10), exps3[[2]]$plot(10), exps3[[3]]$plot(10))
p3
tibble::tibble(K = K, cvg = cvg, mse = mse, bias = bias, variance = variance)
K <- numeric(length(exps4))
mse <- numeric(length(exps4))
cvg <- numeric(length(exps4))
variance <- numeric(length(exps4))
bias <- numeric(length(exps4))
for(exp in seq_along(exps4)){
cvg[exp] <- exps4[[exp]]$cvrg
K[exp] <- exps4[[exp]]$est$cross_fit
bias[exp] <-mean(exps4[[exp]]$ATE-exps4[[exp]]$TrueATE)
mse[exp] <- mean((exps4[[exp]]$ATE-exps4[[exp]]$TrueATE)^2)
variance[exp] <- var(exps4[[exp]]$ATE)
}
p4 <- cowplot::plot_grid(exps4[[1]]$plot(10), exps4[[2]]$plot(10), exps4[[3]]$plot(10))
p4
tibble::tibble(K = K, cvg = cvg, mse = mse, bias = bias, variance = variance)
